name: Deploy to Lambda

on:
  push:
    branches: [ master ]  # TODO: Branches to trigger workflow on push
  workflow_dispatch:

jobs:
  upload_deps:
    if: github.repository != 'iamMichaelSmith/DiscordQABot'
    name: Upload Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Upload Dependencies
        env:
          release_bucket: discordbotbucket
          release_bucket_uri: s3://discordbotbucket
          release_id: deps.zip
          release_layer: discord-lambda-py-deps
          function_name: StudioDiscordBot
          APP_ID: ${{ secrets.APP_ID }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          set -e
          mkdir -p python/lib/python3.11/site-packages

          docker run --rm -v "$PWD:/var/task" "public.ecr.aws/sam/build-python3.11" /bin/sh -c "pip install -r requirements.txt -t python/lib/python3.11/site-packages/; exit"

          PYTHONPATH=python/lib/python3.11/site-packages python -m discord_lambda.CommandRegistryPickler

          zip -q -r $release_id python CommandRegistry.pickle

          echo "Uploading $release_id to $release_bucket_uri"
          aws s3 cp $release_id $release_bucket_uri
          aws lambda publish-layer-version --layer-name $release_layer --content S3Bucket=$release_bucket,S3Key=$release_id --compatible-runtimes python3.11

          prev_layer_version=$(aws lambda list-layer-versions --layer-name $release_layer --query 'LayerVersions[1].Version' --output text)

          if [ "$prev_layer_version" != "None" ]; then
            aws lambda delete-layer-version --layer-name $release_layer --version-number $prev_layer_version
          fi

          layer_arn=$(aws lambda list-layer-versions --layer-name $release_layer --query 'LayerVersions[0].LayerVersionArn' --output text)

          aws lambda update-function-configuration --function-name $function_name --layers $layer_arn
  
  upload_source:
    if: github.repository != 'jaARke/discord-lambda-py'
    name: Upload Source
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Zip source code
        run: zip -q -r ./bundle.zip ./ -x '*.git*'
        
      - name: Deploy to Lambda
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-east-1
          function_name: StudioDiscordBot
          zip_file: bundle.zip
          environment: |
            APP_ID=${{ secrets.APP_ID }}
            PUBLIC_KEY=${{ secrets.PUBLIC_KEY }}
            # Add your environment variables below in the same format as above
